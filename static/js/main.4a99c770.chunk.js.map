{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","style","height","width","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","filter","element","defaultProps","aboutText","Alert","alert","role","word","lower","toLowercase","charAt","toUppercase","slice","msg","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4a99c770.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n              </li>  */}\r\n              \r\n            </ul>\r\n            <div className=\"d-flex\">\r\n              <div className=\"bg-primary rounded mx-2\" style={{height: '20px', width:'20px'}}></div>\r\n            </div>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string.isRequired,\r\n                    aboutText: PropTypes.string,}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About Text here'\r\n}\r\n","import React, {useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    \r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Uppercase\", \"success\");\r\n    }\r\n    const handleLowClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Lowercase\", \"success\");\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"Uppercase On Change\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleCopy = () => {\r\n        // console.log(\"I am copy\");\r\n        navigator.clipboard.writeText(text);\r\n        // document.getSelection().removeAllRanges();\r\n        props.showAlert(\"Copied to clipboard\", \"success\");\r\n    }\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra removed spaces\", \"success\");\r\n    }\r\n    const [text, setText] = useState('');\r\n    // setText(\"newText\"); // correct way to change\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n            <h1 className='mb-4'>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'#13466e':'white', color:props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleLowClick}>Convert to LowerCase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minute read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Nothing to Preview\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowercase();\r\n        return lower.charAt(0).toUppercase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n      {  props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize[props.alert.type]}</strong>{props.alert.msg}\r\n\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport React, { useState } from 'react';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //Whether dark mode is enable or not\n  const [alert, setAlert] = useState(null);\n\n\n  const showAlert = (message, type)=>{\n    setAlert ({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n        setAlert(null);\n    }, 1000);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode ('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      // document.title = \"TextUtils- Dark mode\";\n    }\n    else{\n      setMode ('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      // document.title = \"TextUtils- Light mode\";\n    }\n  }\n  return (\n    <>\n  {/* <Router>   */}\n  <Navbar title=\"TextUtils\"  aboutText=\"About us\" mode={mode} toggleMode={toggleMode}/>\n  {/* <Navbar/> */}\n  <Alert alert={alert}/>\n  <div className=\"container my-3\">\n  {/* <Switch>  */}\n          {/* <Route exact path=\"/about\">\n            <About mode={mode}/>\n          </Route> */}\n\n          {/* <Route exact path=\"/\"> */}\n            <TextForm showAlert={showAlert} heading= \"Try TextUtils - Word Counter, Character Counter, Remove extra Spaces\" mode={mode}/>\n          {/* </Route> */}\n  {/* </Switch>  */}\n  \n  \n  </div>\n  {/* </Router> */}\n  \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}